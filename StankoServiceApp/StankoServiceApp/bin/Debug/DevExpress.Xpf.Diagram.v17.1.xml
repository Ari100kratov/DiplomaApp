<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Xpf.Diagram.v17.1</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Xpf.Diagram.DiagramControl.CustomCursor"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs.#ctor(DevExpress.Xpf.Diagram.DiagramControl,System.Windows.Point,DevExpress.Xpf.Diagram.DiagramHitInfo,System.Windows.Input.Cursor)">
            <summary>
                <para>Initializes a new instance of the DiagramCustomCursorEventArgs class.
</para>
            </summary>
            <param name="source">
		The <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that raised the event.

            </param>
            <param name="diagramPoint">
		A <see cref="T:System.Windows.Point"/> value that is the mouse pointer position.

            </param>
            <param name="hitInfo">
		A <b>DiagramHitInfo</b> object containing information about the object located under the mouse poiner.

            </param>
            <param name="cursor">
		The <see cref="T:System.Windows.Input.Cursor"/> object.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs.Cursor">
            <summary>
                <para>Gets or sets a custom cursor.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Input.Cursor"/> object that is the custom cursor.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs.DiagramPoint">
            <summary>
                <para>Gets the mouse pointer position within the diagram control.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Point"/> value that is the current mouse pointer position.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCustomCursorEventArgs.HitInfo">
            <summary>
                <para>Gets the information about an object located at the current mouse pointer position.
</para>
            </summary>
            <value>A <b>DiagramHitInfo</b> descendant that contains information about an object located at the current mouse pointer position.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramItem">

            <summary>
                <para>The base class for diagram items.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ActualPadding">
            <summary>
                <para>Gets the actual padding for the diagram item. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Thickness"/> value that specifies the actual padding for the current item.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ActualPaddingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.AffectedByLayoutAlgorithms">
            <summary>
                <para>Specifies whether the item can be realigned by the automatic layout algoritms. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if the item can be realigned by the automatic layout algorithms; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AffectedByLayoutAlgorithmsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Anchors">
            <summary>
                <para>Gets or sets the sides of the root item (page) to which the current DiagramItem object is anchored. This is a dependency property.
</para>
            </summary>
            <value>The sides of the root item (page) to which the diagram item is anchored.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AnchorsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Angle">
            <summary>
                <para>Specifies the angle by which the diagram item is rotated around its anchor point. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying an angle in degrees.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AngleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.AreSubordinatesVisible">
            <summary>
                <para>Gets whether the current item's subordinates are visible. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if current item's subordinates are visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AreSubordinatesVisibleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Background">
            <summary>
                <para>Gets or sets the brush used to paint the diagram item background.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item background is painted. 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.BackgroundId">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.BackgroundIdProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Bindings">
            <summary>
                <para>Gets a collection of current diagram item's bindings. This is a dependency property.
</para>
            </summary>
            <value>A <b>DiagramBindingCollection</b> object.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorBeginPoint">
            <summary>
                <para>Specifies whether end-users can attach a connector's beginning point to the item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to attach the begin point of a connector to the item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorBeginPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorEndPoint">
            <summary>
                <para>Specifies whether end-users can attach the end point of a connector to the item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to attach the end point of a connector to the item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanAttachConnectorEndPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanChangeParent">
            <summary>
                <para>Specifies whether to allow end-users to place the item into another container.
</para>
            </summary>
            <value><b>true</b> to allow end-users to place the item into another container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanChangeParentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanCopy">
            <summary>
                <para>Specifies whether the diagram item can be copied to clipboard by end-users. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to copy the diagram item to clipboard; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanCopyProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanCopyWithoutParent">
            <summary>
                <para>Specifies whether to allow end-users to copy the item placed in a container. This is a dependency property.

</para>
            </summary>
            <value><b>true</b>, to allow end-users to copy an item placed in a container; otherwise, <b>false</b>.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanCopyWithoutParentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanDelete">
            <summary>
                <para>Specifies whether the diagram item can be removed by end-users. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to remove the diagram item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanDeleteProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanDeleteWithoutParent">
            <summary>
                <para>Specifies whether to allow end-users to delete the item placed in a container. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to delete the item placed in a container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanDeleteWithoutParentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanEdit">
            <summary>
                <para>Specifies whether to allow end-users to edit the text displayed by the item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to edit the item's text; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanEditProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanHideSubordinates">
            <summary>
                <para>Gets or sets whether an end-user can hide the subordinates of the current diagram item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to allow hiding subordinates of the current item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanHideSubordinatesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanMove">
            <summary>
                <para>Specifies whether to allow end-users to move the item across the canvas. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to allow end-users to move the item across the canvas; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanMoveProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanResize">
            <summary>
                <para>Specifies whether to allow end-users to resize the item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to resize the item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanResizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanRotate">
            <summary>
                <para>Specifies whether to allow end-users to rotate the item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to rotate the item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanRotateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSelect">
            <summary>
                <para>Specifies whether to allow end-users to select the item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to select the item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSelectProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToOtherItems">
            <summary>
                <para>Specifies whether the item can snap to other items. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if the item can snap to other items; otherwise, <b>false</b>.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToOtherItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToThisItem">
            <summary>
                <para>Specifies whether other items can snap to this item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if the item can snap to other items; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToThisItemProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonHorizontalAlignment">
            <summary>
                <para>Gets or sets the horizontal alignment of the collapse button.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the horizontal alignment of the collapse button.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonHorizontalAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonOffset">
            <summary>
                <para>Gets or sets the collapse button's offset.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Point"/> object that is the collapse button's offset.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonOffsetProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonPosition">
            <summary>
                <para>Gets or sets the position of the collapse button.
</para>
            </summary>
            <value><see cref="T:System.Windows.Point"/> object that specifies the position of the collapse button.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonPositionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVerticalAlignment">
            <summary>
                <para>Gets or sets the vertical alignment of the collapse button.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the vertical alignment of the collapse button.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVerticalAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVisibilityMode">
            <summary>
                <para>Gets or sets a value that indicates when the collapse button is displayed. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.CollapseButtonVisibilityMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CollapseButtonVisibilityModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ConnectionPoints">
            <summary>
                <para>Specifies the list of points on the perimeter of a shape at which connectors can terminate. This is a dependency property.
</para>
            </summary>
            <value>A list of points on the perimeter of a shape at which connectors can terminate.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ConnectionPointsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.Controller">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CustomStyleId">
            <summary>
                <para>Specifies the key of a style to apply to the diagram item. This is a dependency property.

</para>
            </summary>
            <value>The key of a style applied to the item.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CustomStyleIdProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Foreground">
            <summary>
                <para>Gets or sets the brush used to paint the diagram item foreground.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item background is painted.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ForegroundId">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ForegroundIdProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramItem.GetDiagram">
            <summary>
                <para>Gets the diagram control that is the owner of the diagram item.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> object that is the owner of the DiagramItem.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.IncomingConnectors">
            <summary>
                <para>Gets the collection of the current item's incoming connectors.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> objects.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.IsSelected">
            <summary>
                <para>Gets whether the diagram item is selected. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if the diagram item is selected; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.IsSelectedProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.MoveWithSubordinates">
            <summary>
                <para>Gets or sets whether moving the current diagram item also moves its subordinates. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to move the current item together with its subordinates; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.MoveWithSubordinatesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramItem.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.OutgoingConnectors">
            <summary>
                <para>Gets the collection of the current item's outgoing connectors.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Xpf.Diagram.DiagramConnector"/> objects.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ParentItem">
            <summary>
                <para>Returns the current item's parent item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object that represents the current item's parent item.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Position">
            <summary>
                <para>Gets or sets the coordinates of the item's upper left corner. This is a dependency property.
</para>
            </summary>
            <value>The coordinates of the item's upper left corner.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.PositionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.RenderTransform">
            <summary>
                <para>Gets or sets an object that transforms the current diagram item. 
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Transform"/> descendant.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.SelectionLayer">
            <summary>
                <para>This item supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.SelectionLayerProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramItem.SetFontSize(System.Double,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Specifies the font size for the text within the diagram item.
</para>
            </summary>
            <param name="value">
		The value.

            </param>
            <param name="unit">
		The unit of measure.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Stroke">
            <summary>
                <para>Gets or sets the brush used to paint the diagram item outline. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item outline is painted. 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeDashArray">
            <summary>
                <para>Gets or sets a collection of System.Double values that indicate the pattern of dashes and gaps that is used to outline diagram items. This is a dependency property.
</para>
            </summary>
            <value>A collection of System.Double values that specify the pattern of dashes and gaps.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeDashArrayProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeId">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeIdProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeThickness">
            <summary>
                <para>Gets or sets the width of the diagram item outline. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="Double"/> value that specifies the width, in pixels, of the diagram item outline.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeThicknessProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TemplateCondition">
            <summary>
                <para>Gets or sets a condition that is used to choose a template for the diagram item. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TemplateConditionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TemplateName">
            <summary>
                <para>Identifies the item as a template used by data binding behaviors. This is a dependency property.
</para>
            </summary>
            <value>A string value that is the name of the template.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TemplateNameProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TextAlignment">
            <summary>
                <para>Specifies the alignment of the text within the diagram item. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.TextAlignment enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TextAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TextDecorations">
            <summary>
                <para>Gets or sets a collection of decorations applied to the text within the diagram item. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.TextDecorationCollection instance.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TextDecorationsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ThemeStyleId">
            <summary>
                <para>Gets or sets the identifier of a style applied to the diagram item. This is a dependency property.
</para>
            </summary>
            <value>The style identifier.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ThemeStyleIdProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramItem.ToString">
            <summary>
                <para>Returns the textual representation of the DiagramItem.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value which is the textual representation of the DiagramItem.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Weight">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.WeightProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramCommands">

            <summary>
                <para>Provides access to diagram commands.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramCommands.#ctor(DevExpress.Xpf.Diagram.DiagramControl)">
            <summary>
                <para>Initializes a new instance of the DiagramCommands class.
</para>
            </summary>
            <param name="diagram">
		A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> that will expose the collection of commands via its <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Commands"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.BringForward">
            <summary>
                <para>Gets the command that brings the selected diagram items forward.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.BringToFront">
            <summary>
                <para>Gets the command that brings the selected diagram items to the front.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Cancel">
            <summary>
                <para>Gets the command that cancels the current selection.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ChangeConnectorType">
            <summary>
                <para>Gets the command that changes the connector type.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.CircularLayout">
            <summary>
                <para>Gets the command that realigns diagram items to form a circular layout.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Copy">
            <summary>
                <para>Gets the command that copies the selected diagram items to the Clipboard.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Cut">
            <summary>
                <para>Gets the command that removes the selected diagram items and copies them to the Clipboard.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.DecreaseFontSize">
            <summary>
                <para>Gets the command that decreases the font size for the text within the selected diagram items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Delete">
            <summary>
                <para>Gets the command that removes the selected diagram items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.DisplayItemProperties">
            <summary>
                <para>Gets the command that invokes the Properties Panel.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Edit">
            <summary>
                <para>Gets the command that initiates text editing for the selected shape.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Empty">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ExportDiagram">
            <summary>
                <para>Gets the command that exports the diagram to an image file of the specified format.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FitToDrawing">
            <summary>
                <para>Gets the command that changes the page size to fit the diagram contents.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FitToPage">
            <summary>
                <para>Gets the command that sets the diagram zoom factor value to fit all pages with content within the canvas.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FitToWidth">
            <summary>
                <para>Gets the command that sets the diagram zoom factor value to fit the entire diagram width.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FlipImage">
            <summary>
                <para>Gets the command that flips the selected image.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FocusNextControl">
            <summary>
                <para>Gets the command that moves focus to the next control.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.FocusPrevControl">
            <summary>
                <para>Gets the command that moves focus to the previous control.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.IncreaseFontSize">
            <summary>
                <para>Gets the command that increases the font size for the text within the selected diagram items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.InsertImage">
            <summary>
                <para>Gets the command that invokes the <b>Insert Image</b> dialog that allows the end-user to add an image item to the diagram.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.LoadImage">
            <summary>
                <para>Gets the command that invokes the <b>Insert Image</b> dialog that allows the end-user to change the selected image item.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.MoveSelection">
            <summary>
                <para>Gets the command that moves currently selected items in the specified direction.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.MoveSelectionNoSnap">
            <summary>
                <para>Gets the command that moves currently selected items in the specified direction without snapping to grid lines or other items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.NewFile">
            <summary>
                <para>Gets the command that closes the current file and creates a new one.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.OpenFile">
            <summary>
                <para>Gets the command that invokes the Open File dialog window.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Paste">
            <summary>
                <para>Gets the command that inserts the diagram items from the clipboard onto the Canvas.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Print">
            <summary>
                <para>Gets the command that invokes the Print dialog window.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.QuickPrint">
            <summary>
                <para>Gets the command that prints the diagram with default print settings.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Redo">
            <summary>
                <para>Gets the command that reapplies the last action that was undone in the diagram control.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ResetSelectedImages">
            <summary>
                <para>Gets the command that resets the appearance of the selected image items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Rotate">
            <summary>
                <para>Gets the command that rotates the selected items by the specified angle.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SaveFile">
            <summary>
                <para>Gets the command that saves changes made to the diagram. If the diagram has not been saved to a file before, the command invokes the Save File As dialog window.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SaveFileAs">
            <summary>
                <para>Gets the command that invokes the Save File As dialog window.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectAll">
            <summary>
                <para>Gets the command that selects all items within the diagram.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectConnectorTool">
            <summary>
                <para>Gets the command that selects the connector tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectEllipseTool">
            <summary>
                <para>Gets the command that selects the ellipse tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectHexagonTool">
            <summary>
                <para>Gets the command that selects the hexagon tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectNextItem">
            <summary>
                <para>Gets the command that selects the next diagram item in the order they were added to the diagram.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectPanTool">
            <summary>
                <para>Gets the command that selects the pan tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectPointerTool">
            <summary>
                <para>Gets the command that selects the pointer tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectPrevItem">
            <summary>
                <para>Gets the command that selects the previous diagram item in the order they were added to the diagram.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectRectangleTool">
            <summary>
                <para>Gets the command that selects the rectangle tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectRightTriangleTool">
            <summary>
                <para>Gets the command that selects the right triangle tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SelectTool">
            <summary>
                <para>Gets the command that selects a diagram tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SendBackward">
            <summary>
                <para>Gets the command that sends the selected diagram items backward.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SendToBack">
            <summary>
                <para>Gets the command that sends the selected diagram items to the back.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetHorizontalAlignment">
            <summary>
                <para>Gets the command that applies the specified horizontal alignment to the text within the selected diagram items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetPageParameters">
            <summary>
                <para>Gets the command that invokes the Page Setup Dialog Window.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedContainersHeaderPadding">
            <summary>
                <para>Gets the command that changes the amount of header padding for the selected containers.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedContainersPadding">
            <summary>
                <para>Gets the command that changes the amount of padding for the selected container.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedContainersShape">
            <summary>
                <para>Gets the command that changes the shape of the selected container.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedImagesScale">
            <summary>
                <para>Gets the command that sets the specified zoom factor for selected image items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedImagesStretchMode">
            <summary>
                <para>Gets the command that sets the specified stretch mode for selected image items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetSelectedItemsStyle">
            <summary>
                <para>Gets the command that sets the style of the selected diagram item.

</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetVerticalAlignment">
            <summary>
                <para>Gets the command that applies the specified vertical alignment to the text within the selected diagram items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SetZoom">
            <summary>
                <para>Gets the command that applies a zoom factor value to a document. 
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ShowContainerHeader">
            <summary>
                <para>Gets the command that toggles the visibility of the header for the currently selected container items.
</para>
            </summary>
            <value>An object implementing the <see cref="T:System.Windows.Input.ICommand"/> interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ShowPopupMenu">
            <summary>
                <para>Gets the command that invokes the popup menu for the selected item.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ShowPrintPreview">
            <summary>
                <para>Gets the command that invokes the Print Preview.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ShowPropertiesPanel">
            <summary>
                <para>Gets the command that invokes the Properties Panel.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.StartDragTool">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.StartDragToolAlternate">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.SugiyamaLayout">
            <summary>
                <para>Gets the command that realigns diagram items according to the layered graph drawing (Sugiyama-style graph drawing) algorithm.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.TipOverTreeLayout">
            <summary>
                <para>Gets the command that realigns diagram items to form a tip-over tree diagram.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.TipOverTreeLayoutForSubordinates">
            <summary>
                <para>Gets the command that applies the Tip-over layout to the subordinates of the diagram items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleFontBold">
            <summary>
                <para>Gets the command that toggles bold font for the text within the selected shapes.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleFontItalic">
            <summary>
                <para>Gets the command that toggles italic font for the text within the selected shapes.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleFontStrikethrough">
            <summary>
                <para>Gets the command that toggles strikethrough for the text within the selected shapes.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleFontUnderline">
            <summary>
                <para>Gets the command that toggles underline for the text within the selected shapes.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ToggleSubordinatesVisibility">
            <summary>
                <para>Gets the command that shows or hides the subordinates of the selected diagram item.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.TreeLayout">
            <summary>
                <para>Gets the command that realigns diagram items to form a tree diagram.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.TreeLayoutForSubordinates">
            <summary>
                <para>Gets the command that applies the Tree layout to the subordinates of the diagram items.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.Undo">
            <summary>
                <para>Gets the command that cancels changes resulting from the last operation.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramCommands.UpdateCommands(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Gets the command that updates the state of all <see cref="T:DevExpress.Xpf.Diagram.DiagramCommands"/> members.
</para>
            </summary>
            <param name="commands">
		An object implementing the System.Windows.Input.ICommand interface.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.UseTool">
            <summary>
                <para>Gets the command that uses a diagram tool.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ZoomIn">
            <summary>
                <para>Gets the command that increases the current zoom factor of a diagram.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramCommands.ZoomOut">
            <summary>
                <para>Gets the command that decreases the current zoom factor of a diagram.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramControl">

            <summary>
                <para>The diagram control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramControl class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">
            <summary>
                <para>Specifies the currently selected diagram tool. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ActiveToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.AddingNewItem">
            <summary>
                <para>Fires each time a new item is added to the diagram by the end-user (e.g., dropped from the toolbox, drawn using a tool).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AddingNewItemEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.AlignCanvas(System.Nullable`1,System.Nullable`1)">
            <summary>
                <para>Applies the specified alignment to the canvas.
</para>
            </summary>
            <param name="horizontalAlignment">
		A <see cref="T:System.Windows.HorizontalAlignment"/> enumeration value that is the horizontal alignment of the canvas.

            </param>
            <param name="verticalAlignment">
		A <see cref="T:System.Windows.VerticalAlignment"/> enumeration value that is the vertical alignment of the canvas.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.AlignPage(System.Nullable`1,System.Nullable`1)">
            <summary>
                <para>Scrolls the viewport according to the specified horizontal and vertical alignment.
</para>
            </summary>
            <param name="horizontalAlignment">
		A System.Windows.HorizontalAlignment enumeration value.

            </param>
            <param name="verticalAlignment">
		A System.Windows.VerticalAlignment enumeration value.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowDiagramProperties">
            <summary>
                <para>Specifies whether to display the 'Properties' menu item in the context menu. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to display the 'Properties' menu item in the context menu; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowDiagramPropertiesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowEmptySelection">
            <summary>
                <para>Specifies whether to allow selecting the root item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to allow selecting the root item ; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowEmptySelectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowPropertiesPanel">
            <summary>
                <para>Specifies whether to display the 'Properties' menu item in the context menu. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to display the 'Properties' menu item in the context menu; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowPropertiesPanelProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyCircularLayout(DevExpress.Diagram.Core.Layout.CircularLayoutSettings,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the circular layout algorithm.
</para>
            </summary>
            <param name="settings">
		A <see cref="T:DevExpress.Diagram.Core.Layout.CircularLayoutSettings"/> object.

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyCircularLayout(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the circular layout algorithm.
</para>
            </summary>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the Sugiyama (layered) layout algorithm.
</para>
            </summary>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(DevExpress.Diagram.Core.Layout.SugiyamaLayoutSettings,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the Sugiyama (layered) layout algorithm.
</para>
            </summary>
            <param name="settings">
		A <see cref="T:DevExpress.Diagram.Core.Layout.SugiyamaLayoutSettings"/> object.

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(DevExpress.Diagram.Core.Layout.LayoutDirection,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the Sugiyama (layered) layout algorithm.
</para>
            </summary>
            <param name="direction">
		A <see cref="T:DevExpress.Diagram.Core.Layout.LayoutDirection"/> enumeration value.

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(DevExpress.Diagram.Core.Direction,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the Sugiyama (layered) layout algorithm.
</para>
            </summary>
            <param name="direction">
		A <see cref="T:DevExpress.Diagram.Core.Direction"/> enumeration value.

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayout(System.Collections.Generic.IEnumerable`1,System.Nullable`1)">
            <summary>
                <para>Applies the tip-over tree layout algorithm.
</para>
            </summary>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>
            <param name="splitMode">
		A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithm only to items that are connected to at least one other item. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayout(DevExpress.Diagram.Core.Layout.TipOverDirection,System.Collections.Generic.IEnumerable`1,System.Nullable`1)">
            <summary>
                <para>Applies the tip-over tree layout algorithm.
</para>
            </summary>
            <param name="direction">
		A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverDirection"/> enumeration value.

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>
            <param name="splitMode">
		A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithim only items that are connected to at least one other item. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayout(DevExpress.Diagram.Core.Layout.TipOverTreeLayoutSettings,DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the tip-over tree layout algorithm.
</para>
            </summary>
            <param name="settings">
		A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverTreeLayoutSettings"/> object.

            </param>
            <param name="splitMode">
		A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithm only to items that are connected to at least one other item. 

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable`1,DevExpress.Diagram.Core.Layout.TipOverTreeLayoutSettings)">
            <summary>
                <para>Applies the Tip-Over Tree layout to the subordinates of the specified diagram items.
</para>
            </summary>
            <param name="items">
		A collection of diagram items whose subordinates will be repositioned.

            </param>
            <param name="settings">
		An object that contains the Tip-Over Tree layout settings.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTipOverTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the Tip-Over Tree layout to the subordinates of the specified diagram items.
</para>
            </summary>
            <param name="items">
		A collection of diagram items whose subordinates will be repositioned.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(System.Collections.Generic.IEnumerable`1,System.Nullable`1)">
            <summary>
                <para>Applies the tree layout algorithm.
</para>
            </summary>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>
            <param name="splitMode">
		A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithm only to items that are connected to at least one other item. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(DevExpress.Diagram.Core.Layout.LayoutDirection,System.Collections.Generic.IEnumerable`1,System.Nullable`1)">
            <summary>
                <para>Applies the tree layout algorithm.
</para>
            </summary>
            <param name="direction">
		A <see cref="T:DevExpress.Diagram.Core.Layout.LayoutDirection"/> enumeration value.

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>
            <param name="splitMode">
		A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithim only items that are connected to at least one other item.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(DevExpress.Diagram.Core.Layout.TreeLayoutSettings,DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the tree layout algorithm.
</para>
            </summary>
            <param name="settings">
		A <see cref="T:DevExpress.Diagram.Core.Layout.TreeLayoutSettings"/> object.

            </param>
            <param name="splitMode">
		A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value specifying whether to apply the layout algorithm only to items that are connected to at least one other item.

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(DevExpress.Diagram.Core.Direction,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the tree layout algorithm.
</para>
            </summary>
            <param name="direction">
		A <see cref="T:DevExpress.Diagram.Core.Direction"/> enumeration value.

            </param>
            <param name="items">
		A collection of items to which to apply the algorithm.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable`1,DevExpress.Diagram.Core.Layout.TreeLayoutSettings)">
            <summary>
                <para>Applies the Tree layout to the subordinates of the specified diagram items.
</para>
            </summary>
            <param name="items">
		A collection of diagram items whose subordinates will be repositioned.

            </param>
            <param name="settings">
		An object that contains the Tree layout settings.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayoutForSubordinates(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Applies the Tree layout to the subordinates of the specified diagram items.
</para>
            </summary>
            <param name="items">
		A collection of diagram items whose subordinates will be repositioned.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.AttachToWindow">
            <summary>
                <para>Binds the window's Title property to the name of the current document and subscribes the diagram to the window's Closing event. When the end-user attempts to close the window with the diagram that contains unsaved changes, a dialog window is invoked prompting the user to save changes.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.BackgroundTemplate">
            <summary>
                <para>Gets or sets the template that defines the presentation of the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>'s background. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that defines the presentation of the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>'s background.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.BackgroundTemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BeginInit">
            <summary>
                <para>Starts the runtime initialization. 
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.BringIntoViewMargin">
            <summary>
                <para>Gets or sets the margin between diagram items and viewport bounds when calling the <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsIntoView"/> and <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectionIntoView"/> methods. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value that represents the margin between diagram items and viewport bounds.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.BringIntoViewMarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsForward(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Brings the specified diagram items forward one step in the stack.
</para>
            </summary>
            <param name="items">
		The diagram items to be brought forward one step in the stack.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsIntoView(System.Collections.Generic.IEnumerable`1,DevExpress.Diagram.Core.BringIntoViewMode)">
            <summary>
                <para>Scrolls the diagram and changes its zoom factor to bring the specified diagram items into view.
</para>
            </summary>
            <param name="items">
		The diagram items to be brought into view.

            </param>
            <param name="viewMode">
		A <see cref="T:DevExpress.Diagram.Core.BringIntoViewMode"/> enumeration value that specifies whether all items should be brought into view when other items are partially visible.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsToFront(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Brings the specified diagram items to the front of the stack.
</para>
            </summary>
            <param name="items">
		The diagram items to be brought to the front of the stack.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectedItemsForward">
            <summary>
                <para>Brings the selected diagram items forward one step in the stack.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectedItemsToFront">
            <summary>
                <para>Brings the specified diagram items to the front of the stack.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectionIntoView(DevExpress.Diagram.Core.BringIntoViewMode)">
            <summary>
                <para>Scrolls the diagram and changes its zoom factor to bring the selected diagram items into view.
</para>
            </summary>
            <param name="viewMode">
		A <see cref="T:DevExpress.Diagram.Core.BringIntoViewMode"/> enumeration value that specifies whether all items should be brought into view when other items are partially visible.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitInfo(System.Func`2)">
            <summary>
                <para>Returns information on an object located at the specified position.
</para>
            </summary>
            <param name="getPosition">
		A function that returns the point where a target element is located.

            </param>
            <returns>A DiagramHitInfo descendant that contains information on an object located at the specified position.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitInfo(System.Windows.Point)">
            <summary>
                <para>Returns information on an object located at the specified position.
</para>
            </summary>
            <param name="diagramRelativePoint">
		A test point where a target element is located.

            </param>
            <returns>A DiagramHitInfo descendant that contains information on an object located at the specified position.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitItem(System.Windows.Point)">
            <summary>
                <para>Returns the diagram item located at the specified position.
</para>
            </summary>
            <param name="diagramRelativePoint">
		A test point where a target element is located.

            </param>
            <returns>A diagram item located at the specified position.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitItem(System.Func`2)">
            <summary>
                <para>Returns the diagram item located at the specified position.
</para>
            </summary>
            <param name="getPosition">
		A function that returns the point where a target element is located.

            </param>
            <returns>A diagram item located at the specified position.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanRedo">
            <summary>
                <para>Indicates whether there are actions that occurred recently within the control that can be reapplied. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if there are operations that have been undone that can be reapplied; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanRedoProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanUndo">
            <summary>
                <para>Indicates whether the user can undo the previous operation. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if the user can undo the previous opration; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanUndoProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CanvasBoundsChanged">
            <summary>
                <para>Occurs when the size of the Canvas is changed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanvasBoundsChangedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanvasSizeMode">
            <summary>
                <para>Specifies whether the Canvas size is automatically changed to fit the current shapes layout. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.CanvasSizeMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanvasSizeModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ChangeConnectorsType(DevExpress.Diagram.Core.ConnectorType,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Changes the type of the specified connectors.

</para>
            </summary>
            <param name="type">
		A <b>ConnectorType</b> class member that specifies the type of the connectors.

            </param>
            <param name="connectors">
		A collection of diagram connectors.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ChangeSelectedConnectorsType(DevExpress.Diagram.Core.ConnectorType)">
            <summary>
                <para>Specifies the connector type for the currently selected connectors.
</para>
            </summary>
            <param name="type">
		A <b>ConnectorType</b> class member that specifies the type of the connectors.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutNodesSpacing">
            <summary>
                <para>Specifies the spacing between the diagram items. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the spacing between the diagram items in pixels.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutNodesSpacingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutOrder">
            <summary>
                <para>Specifies how the circular layout algorithm arranges shapes. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Layout.CircularLayoutOrder"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutOrderProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutStartAngle">
            <summary>
                <para>Specifies the start angle in degrees in the counterclockwise direction. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the start angle in degrees in the counterclockwise direction
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CircularLayoutStartAngleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ClearSelection">
            <summary>
                <para>Unselects any selected shapes and connectors.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ClosedEditor">
            <summary>
                <para>Fires after the end-user closes the diagram item's text editor.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ClosedEditorEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Commands">
            <summary>
                <para>Provides access to the set of available diagram commands.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramCommands"/> object that provides a set of diagram commands.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ConnectorTool">
            <summary>
                <para>Specifies the tool that is used when the end-user selects the Connector tool in the Ribbon. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the connector tool.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ConnectorToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.Controller">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CopySelectedItems">
            <summary>
                <para>Copies the currently selected diagram items to the clipboard.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateAdorner(System.Windows.FrameworkElement)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="element">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateAdornerEx``2(``0)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="control">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateBackgroundAdorner(System.Windows.FrameworkElement)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="element">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateHRulerAdorner(System.Windows.FrameworkElement)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="element">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateVRulerAdorner(System.Windows.FrameworkElement)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="element">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomCursor">
            <summary>
                <para>Occurs when the mouse cursor enters the diagram control.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomCursorEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetEditableItemProperties">
            <summary>
                <para>Allows you to modify the list of diagram item properties that can be edited by end-users in the Properties Panel.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetEditableItemPropertiesCacheKey">
            <summary>
                <para>Allows you to update the set of properties displayed by the property grid.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomGetSerializableItemProperties">
            <summary>
                <para>Allows you to modify the list of serializable properties of diagram items.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDrag">
            <summary>
                <para>Occurs when an end-user starts dragging a diagram item.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDragEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDragResult">
            <summary>
                <para>Occurs before a drag and drop operation is completed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomItemDragResultEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemGiveFeedback">
            <summary>
                <para>Occurs while diagram items are dragged.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomItemGiveFeedbackEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomItemQueryContinueDrag">
            <summary>
                <para>Occurs during a drag-and-drop operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomItemQueryContinueDragEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadDocument">
            <summary>
                <para>Fires after an end-user selects a document in the 'Open File' dialog or a document is loaded by setting the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DocumentSource"/> property in code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadDocumentEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadImage">
            <summary>
                <para>Fires after an end-user selects a file in the 'Insert Picture' dialog.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadImageEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomSaveDocument">
            <summary>
                <para>Fires before saving the diagram to a file.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomSaveDocumentEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CutSelectedItems">
            <summary>
                <para>Moves the currently selected diagram items to the clipboard.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.DeleteItems(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Removes the specified diagram items.
</para>
            </summary>
            <param name="items">
		The diagram items to be removed.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.DeleteSelectedItems">
            <summary>
                <para>Removes the currently selected diagram items.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.DeletingItems">
            <summary>
                <para>Fires when the end-user removes items from the diagram canvas.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DeletingItemsEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.DetachFromWindow">
            <summary>
                <para>Removes changes made by the <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.AttachToWindow"/> method.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram(System.Windows.DependencyObject)">
            <summary>
                <para>Specifies the diagram control associated with an object. This is an attached property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> value that specifies the diagram control associated with an object.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplate">
            <summary>
                <para>Gets or sets the template that specifies the background of a page. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that specifies the background of a page.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplateSelector">
            <summary>
                <para>Gets or sets an object that chooses a drawing page background template based on custom logic. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DiagramPageBackgroundTemplateSelectorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DiagramProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.DocumentLoaded">
            <summary>
                <para>Occurs after a document is loaded into the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DocumentLoadedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DocumentSource">
            <summary>
                <para>Specifies a document supplier for the DiagramControl. This is a dependency property.
</para>
            </summary>
            <value>An object that contains data for the DiagramControl.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DocumentSourceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext(System.Windows.DependencyObject)">
            <summary>
                <para>Specifies the drawing context of the diagram. This is an attached property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramDrawingContext"/> enumeration value that specifies the current drawing context of the diagram.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DrawingContextProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.EllipseTool">
            <summary>
                <para>Specifies the tool that is used when the end-user selects the Ellipse tool in the Ribbon. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the ellipse tool.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.EllipseToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.EnableProportionalResizing">
            <summary>
                <para>Gets or sets whether to maintain the aspect ratio when resizing diagram items. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to maintain the aspect ratio when resizing diagram items; otherwise, <b>false</b>. By default, <b>true</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.EnableProportionalResizingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.EndInit">
            <summary>
                <para>Ends the runtime initialization.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ExceptionMessage">
            <summary>
                <para>Enables you to manually handle the file loading exception.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ExceptionMessageEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.String)">
            <summary>
                <para>Exports the diagram in the specified format to a file.
</para>
            </summary>
            <param name="path">
		A string value that is the path to the file to which to save the diagram.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(DevExpress.Diagram.Core.DiagramExportFormat)">
            <summary>
                <para>Invokes the <b>Export</b> dialog window.
</para>
            </summary>
            <param name="exportFormat">
		A DevExpress.Diagram.Core.DiagramExportFormat enumeration value that is the file format which is selected in the dialog window by default.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.IO.Stream,DevExpress.Diagram.Core.DiagramExportFormat,System.Nullable`1,System.Nullable`1)">
            <summary>
                <para>Exports the diagram to the specified stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> object to which the created CSV file should be sent.

            </param>
            <param name="exportFormat">
		A <see cref="T:DevExpress.Diagram.Core.DiagramExportFormat"/> enumeration value.

            </param>
            <param name="dpi">
		A System.Double value which represents the resolution (in dpi). 

            </param>
            <param name="scale">
		A System.Double value that specifies the scale factor.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.String,System.Double,System.Double)">
            <summary>
                <para>Exports the diagram in the specified format to a file.
</para>
            </summary>
            <param name="path">
		A string value that is the path to the file to which to save the diagram.

            </param>
            <param name="exportDPI">
		A System.Double value which represents the resolution (in dpi). 

            </param>
            <param name="exportScale">
		A System.Double value that specifies the scale factor.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ExportDPI">
            <summary>
                <para>Specifies the resolution in which the diagram is exported. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value which represents the resolution (in dpi). 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ExportDPIProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ExportScale">
            <summary>
                <para>Specifies the scale factor to apply to the diagram that is being exported.
</para>
            </summary>
            <value>A System.Double value that represents the scale factor.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ExportScaleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.FileDialogFilter">
            <summary>
                <para>Gets or sets the filter string that determines which files are displayed in the 'Open File' and 'Save File As' dialog boxes. This is a dependency property.
</para>
            </summary>
            <value>A filter string that determines which files are displayed in the file dialog box.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.FileDialogFilterProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawing">
            <summary>
                <para>Changes the page size to fit the diagram contents.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawingMargin">
            <summary>
                <para>Gets or sets the margin between diagram contents and page bounds when calling the <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawing"/> and <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.FitToItems"/> methods. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Thickness"/> value that represents the margin between diagram contents and page bounds.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawingMarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToItems(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Scrolls the diagram and changes its zoom factor so that the viewport is sufficiently large to display the specified items.
</para>
            </summary>
            <param name="items">
		The diagram items to fit within the viewport.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToPage">
            <summary>
                <para>Sets the diagram zoom factor value to fit all pages with content within the viewport.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToWidth">
            <summary>
                <para>Sets the diagram zoom factor value to fit the entire diagram width.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.GetDiagram(System.Windows.DependencyObject)">
            <summary>
                <para>Gets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> attached property from a given object.
</para>
            </summary>
            <param name="d">
		An object whose <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> property's value is to be returned.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> value that specifies the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> attached property for the specified object.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.GetDrawingContext(System.Windows.DependencyObject)">
            <summary>
                <para>Gets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext"/> attached property from a given object.
</para>
            </summary>
            <param name="obj">
		An object whose <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext"/> property's value is to be returned.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Diagram.DiagramDrawingContext"/> value that specifies the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext"/> attached property for the specified object.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GlueToConnectionPointDistance">
            <summary>
                <para>Specifies the distance between the mouse pointer and a connection point at which the connector is glued to the point. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between the mouse pointer and a connection point at which the connector is glued to the point.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GlueToConnectionPointDistanceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GlueToItemDistance">
            <summary>
                <para>Specifies the distance between the mouse pointer and a diagram item at which the connector is glued to the item. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between the mouse pointer and a diagram item at which the connector is glued to the item.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GlueToItemDistanceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GridSize">
            <summary>
                <para>Gets or sets the size of a grid's cell. This is a dependency property.
</para>
            </summary>
            <value>The size of a grid's cell.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GridSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.HasChanges">
            <summary>
                <para>Gets whether the current document has unsaved changes. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if the document has unsaved changes; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.HasChangesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.HexagonTool">
            <summary>
                <para>Specifies the tool that is used when the end-user selects the Hexagon tool in the Ribbon. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the hexagon tool.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.HexagonToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.InsertImage">
            <summary>
                <para>Invokes the <b>Insert Picture</b> dialog that allows the end-user to add an image item to the diagram.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.IsContainerToolsVisible">
            <summary>
                <para>Gets whether the Container Tools Ribbon category is currently displayed. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if the Container Tools ribbon category is displayed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.IsContainerToolsVisibleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.IsImageToolsVisible">
            <summary>
                <para>Gets whether the Image Tools Ribbon category is currently displayed. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if the Image Tools ribbon category is displayed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.IsImageToolsVisibleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.IsTextEditMode">
            <summary>
                <para>Gets whether a diagram item's text is currently being edited. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if a diagram item's text is currently being edited; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.IsTextEditModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemContentChanged">
            <summary>
                <para>Fires each time an item's text is changed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemContentChangedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemCreating">
            <summary>
                <para>Occurs before a diagram item is added to the canvas.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemCreatingEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemInitializing">
            <summary>
                <para>Fires each time an item is created via the DevExpress.Diagram.Core.ItemTool.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemInitializingEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Items">
            <summary>
                <para>Provides access to the collection of diagram items displayed by the DiagramControl.
</para>
            </summary>
            <value>The collection of diagram items.
</value>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsChanged">
            <summary>
                <para>Fires each time an item is added or removed from the diagram.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemsChangedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ItemTypeRegistrator">
            <summary>
                <para>Provides access to methods used to create serializable custom diagram item types. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramItemTypeRegistrator"/> object.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Landscape">
            <summary>
                <para>Specifies whether to use the longer dimension of the page size as the page width. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to use the longer edge of the document size as the page width (landscape orientation); otherwise, <b>false</b> (portrait orientation).
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LandscapeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LastShapeStyles">
            <summary>
                <para>Provides access to the collection of the recently used shapes. This is a dependency property.
</para>
            </summary>
            <value>A read-only collection of the recently used shapes.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LastShapeStylesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpPlacement">
            <summary>
                <para>Specifies which connector lines display jumps in intersections. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.LineJumpPlacement"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpPlacementProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpSize">
            <summary>
                <para>Gets or sets the size of line jumps. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Size"/> value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpStyle">
            <summary>
                <para>Gets or sets the line jump style for connectors. This is a dependency property.
</para>
            </summary>
            <value>A DevExpress.Diagram.Core.LineJumpDescription object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpStyleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.LoadDocument(System.IO.Stream)">
            <summary>
                <para>Loads a diagram document from a stream.
</para>
            </summary>
            <param name="stream">
		The stream from which to load a diagram document.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.LoadDocument(System.String)">
            <summary>
                <para>Loads a diagram from the specified file.
</para>
            </summary>
            <param name="fileName">
		A string specifying the path of the file containing a diagram.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.LoadImage">
            <summary>
                <para>Invokes the <b>Insert Picture</b> dialog that allows the end-user to  to change the selected image item.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MaxZoomFactor">
            <summary>
                <para>Specifies the maximum diagram zoom factor.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value that represents the maximum diagram zoom factor.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MaxZoomFactorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MeasureUnit">
            <summary>
                <para>Specifies the unit of measurement for the ruler displayed by the Canvas. This is a dependency property.
</para>
            </summary>
            <value>A unit of measure.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MeasureUnitProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MinDragDistance">
            <summary>
                <para>Specifies the number of pixels the cursor must move with the mouse down before dragging begins. This is a dependency property.

</para>
            </summary>
            <value>A System.Double value that is the number of pixels the cursor must move with the mouse down before dragging begins.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MinDragDistanceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MinZoomFactor">
            <summary>
                <para>Specifies the minimum diagram zoom factor.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value that represents the minimum diagram zoom factor.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MinZoomFactorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.NewDocument">
            <summary>
                <para>Discards the current document and creates a new one.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.NewFile">
            <summary>
                <para>Closes the current file and creates a new one.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.OpenFile">
            <summary>
                <para>Displays the "Open File" dialog that allows an end-user to load an XML file containing a saved diagram.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PageMargin">
            <summary>
                <para>Gets or sets the amount of space between the page's borders and its contents. This is a dependency property.
</para>
            </summary>
            <value>The amount of space in pixels between the page's borders and its contents.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PageMarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PageSize">
            <summary>
                <para>Gets or sets the initial diagram canvas size (the tile size). This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.Size object representing the tile size in pixels.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PageSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PanTool">
            <summary>
                <para>Specifies the tool that is used when an end-user selects the Pan tool from the Ribbon. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the pan tool.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PanToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PaperKind">
            <summary>
                <para>Allows you to use one of the standard paper sizes as the page size. This is a dependency property.
</para>
            </summary>
            <value>A System.Drawing.Printing.PaperKind enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PaperKindProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.Paste">
            <summary>
                <para>Inserts the diagram items from the clipboard onto the Canvas.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PlatformCache">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PointerTool">
            <summary>
                <para>Specifies the tool that is used when the end-user selects the Pointer tool in the Ribbon. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the pointer tool.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PointerToolDragMode">
            <summary>
                <para>Gets or sets whether dragging the pointer tool pans the canvas or draws a selection rectangle. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.PointerToolDragMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PointerToolDragModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PointerToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PointToControl(System.Windows.Point)">
            <summary>
                <para>Converts the coordinates of a point on the canvas to the control-relative coordinates.
</para>
            </summary>
            <param name="documentPoint">
		A <see cref="T:System.Windows.Point"/> object that represents a point on the canvas.

            </param>
            <returns>A <see cref="T:System.Windows.Point"/> object that represents the control-relative coordinates.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PointToDocument(System.Windows.Point)">
            <summary>
                <para>Converts the control-relative coordinates to the coordinates of a point on the canvas.

</para>
            </summary>
            <param name="controlPoint">
		A <see cref="T:System.Windows.Point"/> object that represents the control-relative coordinates.

            </param>
            <returns>A <see cref="T:System.Windows.Point"/> object that represents a point on the canvas.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrimarySelection">
            <summary>
                <para>Gets the object that is currently the primary selected diagram item.
This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrimarySelectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.Print">
            <summary>
                <para>Invokes the <b>Print</b> dialog window.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplate">
            <summary>
                <para>Gets or sets the template that specifies the background of a printed page. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that specifies the background of a printed page.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplateSelector">
            <summary>
                <para>Gets or sets an object that chooses a printed page background template based on custom logic. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrintPageBackgroundTemplateSelectorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PropertiesPanelVisibility">
            <summary>
                <para>Gets or sets the Properties Panel display mode. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.PropertiesPanelVisibility"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PropertiesPanelVisibilityProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.QuickPrint">
            <summary>
                <para>Prints the current diagram to the default printer.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.RectangleTool">
            <summary>
                <para>Specifies the tool that is used when the end-user selects the Rectangle tool in the Ribbon. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the rectangle tool.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RectangleToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.RelayoutItemsCompleted">
            <summary>
                <para>Occurs immediately after an Automatic Layout algorithm is completed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RelayoutItemsCompletedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ResetSelectedImages">
            <summary>
                <para>Rolls the selected images back to their original state, reverting all resizing and rotation transformations.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ResizingMode">
            <summary>
                <para>Gets or sets how diagram items are resized. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ResizingMode"/> enumeration value that specifies how diagram items are resized.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ResizingModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.RightTriangleTool">
            <summary>
                <para>Specifies the tool that is used when the end-user selects the Right Triangle tool in the Ribbon. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object that represents the triangle tool.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RightTriangleToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.RootToolsModel">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RootToolsModelProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveDocument(System.IO.Stream)">
            <summary>
                <para>Saves the current diagram document to a stream.
</para>
            </summary>
            <param name="stream">
		A stream to which to save the diagram document.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveDocument(System.String)">
            <summary>
                <para>Saves the current diagram to the specified file.
</para>
            </summary>
            <param name="fileName">
		A string specifying the path of the file to which to save the diagram.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveFile">
            <summary>
                <para>Saves the diagram to a file.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveFileAs">
            <summary>
                <para>Invokes the <b>Save File As</b> dialog window that allows the end-user to select the name and destination of the file to which to save the current diagram.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ScrollMargin">
            <summary>
                <para>Gets or sets the outer indents of the diagram. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Thickness"/> value that contains the outer indents of the diagram.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ScrollMarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ScrollToPoint(System.Windows.Point,System.Nullable`1,System.Nullable`1)">
            <summary>
                <para>Scrolls the diagram to the specified point.
</para>
            </summary>
            <param name="diagramPoint">
		A System.Windows.Point object that represents the point to which to scroll the document.

            </param>
            <param name="horizontalAlignment">
		A System.Windows.HorizontalAlignment enumeration value that specifies how to align the point relative to the viewport. By default, Center.

            </param>
            <param name="verticalAlignment">
		A System.Windows.VerticalAlignment enumeration value that specifies how to align the point relative to the viewport. By default, Center.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectAll">
            <summary>
                <para>Selects all shapes and connectors within the current document.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectedItems">
            <summary>
                <para>Provides access to the collection of the currently selected diagram items.
</para>
            </summary>
            <value>A read-only collection of the currently selected diagram items.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectedStencils">
            <summary>
                <para>Specifies the selected shape groups. This is a dependency property.
</para>
            </summary>
            <value>A DevExpress.Diagram.Core.StencilCollection object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectedStencilsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SelectionChanged">
            <summary>
                <para>Occurs after the selection has been changed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionChangedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionModel">
            <summary>
                <para>Gets an object that represents the currently selected diagram item.
</para>
            </summary>
            <value>A <b>SelectionModel</b> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionModelProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionToolsModel">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionToolsModelProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItem(DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Diagram.Core.ModifySelectionMode)">
            <summary>
                <para>Selects the specified diagram item.
</para>
            </summary>
            <param name="item">
		A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object that is the item to select.

            </param>
            <param name="modifySelectionMode">
		A <see cref="T:DevExpress.Diagram.Core.ModifySelectionMode"/> enumeration value that specifies whether to add or replace the existing selection with the specified diagram item. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItems(System.Collections.Generic.IEnumerable`1,DevExpress.Diagram.Core.ModifySelectionMode)">
            <summary>
                <para>Selects the specified diagram items.
</para>
            </summary>
            <param name="items">
		An array of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects representing the diagram items to select.

            </param>
            <param name="modifySelectionMode">
		A <see cref="T:DevExpress.Diagram.Core.ModifySelectionMode"/> enumeration value that specifies whether to add or replace the existing selection with the specified diagram items. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItems(DevExpress.Xpf.Diagram.DiagramItem[])">
            <summary>
                <para>Selects the specified diagram items.
</para>
            </summary>
            <param name="items">
		A list of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects representing the diagram items to select.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectPartiallyCoveredItems">
            <summary>
                <para>Specifies whether to select items that are only partially covered with the selection rectangle. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to select items that are only partially covered with the selection rectangle; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectPartiallyCoveredItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendItemsBackward(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Sends the specified diagram items back one step in the stack.
</para>
            </summary>
            <param name="items">
		The diagram items to be sent back one step in the stack.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendItemsToBack(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Sends the specified diagram items to the back of the stack.
</para>
            </summary>
            <param name="items">
		The diagram items to be sent to the back of the stack.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendSelectedItemsBackward">
            <summary>
                <para>Sends the selected diagram items back one step in the stack.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendSelectedItemsToBack">
            <summary>
                <para>Sends the specified diagram items to the back of the stack.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetDiagram(System.Windows.DependencyObject,DevExpress.Xpf.Diagram.DiagramControl)">
            <summary>
                <para>Sets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> attached property for a given object. 
</para>
            </summary>
            <param name="obj">
		An object for which the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> attached property is set.

            </param>
            <param name="value">
		A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> value that specifies the value to be assigned to the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetDrawingContext(System.Windows.DependencyObject,DevExpress.Xpf.Diagram.DiagramDrawingContext)">
            <summary>
                <para>Sets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext"/> attached property for the specified object.
</para>
            </summary>
            <param name="obj">
		An object for which the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext"/> attached property is set.

            </param>
            <param name="value">
		A <see cref="T:DevExpress.Xpf.Diagram.DiagramDrawingContext"/> enumeration value that specifies the value to be assigned to the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DrawingContext"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetSelectedImagesScale(System.Double)">
            <summary>
                <para>Sets the specified zoom factor for selected image items.
</para>
            </summary>
            <param name="scale">
		A System.Double value that is the zoom factor to apply to selected image items.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetSelectedImagesStretchMode(DevExpress.Diagram.Core.StretchMode)">
            <summary>
                <para>Sets the specified stretch mode for selected image items.
</para>
            </summary>
            <param name="mode">
		A <see cref="T:DevExpress.Diagram.Core.StretchMode"/> enumeration value.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ShowEditor">
            <summary>
                <para>Invokes the text editor for the primary selected diagram shape.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowGrid">
            <summary>
                <para>Specifies whether to display grid lines on the Canvas. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to display grid lines on the canvas; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowGridProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingEditor">
            <summary>
                <para>Enables you to prevent an end-user from activating the editors of individual diagram items.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingEditorEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenDialog">
            <summary>
                <para>Fires before showing an 'Open File' dialog, and allows it to be customized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenDialogEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenImageDialog">
            <summary>
                <para>Fires before showing an 'Insert Picture' dialog, and allows it to be customized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenImageDialogEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingSaveDialog">
            <summary>
                <para>Fires before showing a 'Save File As' dialog, and allows it to be customized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingSaveDialogEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowPageBreaks">
            <summary>
                <para>Gets or sets whether to display page breaks. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to display page breaks; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowPageBreaksProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ShowPrintPreview">
            <summary>
                <para>Invokes the Print Preview.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowQuickShapes">
            <summary>
                <para>Gets or sets whether to show the Quick Shapes category in the Shapes Panel. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to show the Quick Shapes category in the toolbox; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowQuickShapesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowRulers">
            <summary>
                <para>Specifies whether to display rulers on the Canvas. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if rulers are displayed on the canvas; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowRulersProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowSelectionRectangle">
            <summary>
                <para>Gets or sets whether to show the selection rectangle. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to show the selection rectangle; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowSelectionRectangleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToGrid">
            <summary>
                <para>Specifies whether to pull shapes to the grid lines whenever an end-user drags them around the Canvas. This is a dependency property.

</para>
            </summary>
            <value><b>true</b>, to snap shapes to the grid lines; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToGridProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToItems">
            <summary>
                <para>Specifies whether to pull shapes to other shapes whenever an end-user drags them around the Canvas. This is a dependency property.

</para>
            </summary>
            <value><b>true</b> to snap shapes to other shapes; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsDistance">
            <summary>
                <para>Specifies the minimum distance between alignment guides of a shape being dragged and another shape's alignment guides at which the "snap-to-items" feature is activated. If the dragged shape is dropped at this position, it will be aligned with the second shape. This is a dependency property.
</para>
            </summary>
            <value>The snap distance in pixels.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsDistanceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Stencils">
            <summary>
                <para>Provides access to the collection of available stencils.
This is a dependency property.
</para>
            </summary>
            <value>A DevExpress.Diagram.Core.DiagramStencilCollection object that is the collection of available stencils.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.StencilsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHidden">
            <summary>
                <para>Occurs after the subordinates of a diagram shape are hidden.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHiddenEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHiding">
            <summary>
                <para>Occurs before a <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>'s subordinates are hidden.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesHidingEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShowing">
            <summary>
                <para>Occurs before a <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>'s subordinates are shown.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShowingEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShown">
            <summary>
                <para>Occurs after a <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/>'s subordinates are shown.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SubordinatesShownEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnsAlignment">
            <summary>
                <para>Gets or sets the alignment of the diagram depending on its direction. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the diagram alignment.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnsAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnSpacing">
            <summary>
                <para>Specifies the distance between shapes on the same level of hierarchy. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between shapes on the same level of hierarchy.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutColumnSpacingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutConnectorsRouting">
            <summary>
                <para>Gets or sets whether applying the Sugiyama layout affects connector routing. This is a dependency property.

</para>
            </summary>
            <value>A <b>SugiyamaConnectorsRouting</b> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutConnectorsRoutingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutDirection">
            <summary>
                <para>Specifies the flow direction for the automatic layout.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Layout.LayoutDirection"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutDirectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayersAlignment">
            <summary>
                <para>Gets or sets the alignment of the diagram depending on its direction. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the diagram alignment.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayersAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayerSpacing">
            <summary>
                <para>Specifies the distance between layers of hierarchy. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between shapes on the same level of hierarchy.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SugiyamaLayoutLayerSpacingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Theme">
            <summary>
                <para>Specifies the current theme. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTheme"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ThemeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutConnectorsRouting">
            <summary>
                <para>Gets or sets whether applying the Tip-over tree layout affects connector routing. This is a dependency property.

</para>
            </summary>
            <value>A <b>TreeConnectorsRouting</b> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutConnectorsRoutingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutDirection">
            <summary>
                <para>Specifies the tip-over layout direction. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverDirection"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutDirectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutHorizontalAlignment">
            <summary>
                <para>Gets or sets the horizontal alignment of the tip-over diagram. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the horizontal alignment of the diagram.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutHorizontalAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffset">
            <summary>
                <para>Gets or sets the offset used by the tip-over layout. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the offset in pixels.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffsetMode">
            <summary>
                <para>Specifies whether to offset child shapes from the center or the edge of the parent shape. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Layout.TipOverOffsetMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffsetModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutOffsetProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutSplitMode">
            <summary>
                <para>Specifies which diagram items are realigned when performing automatic relayout. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutSplitModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalAlignment">
            <summary>
                <para>Gets or sets the vertical alignment of the tip-over diagram. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the vertical alignment of the diagram.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalSpacing">
            <summary>
                <para>Specifies the distance between layers of hierarchy. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between layers of hierarchy.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TipOverTreeLayoutVerticalSpacingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Title">
            <summary>
                <para>The document title to which the window title can be bound. This is a dependency property.
</para>
            </summary>
            <value>A string object that represents the document title.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TitleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ToolboxVisibility">
            <summary>
                <para>Gets or sets the Shapes Panel display mode. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ToolboxVisibility"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ToolboxVisibilityProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutAlignment">
            <summary>
                <para>Specifies the tree layout alignment. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutBreadthAlignment">
            <summary>
                <para>Gets or sets the tree diagram horizontal alignment relative to the layout direction axis. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the horizontal alignment of the tree diagram.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutBreadthAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutConnectorsRouting">
            <summary>
                <para>Gets or sets whether applying the Tree layout affects connector routing. This is a dependency property.

</para>
            </summary>
            <value>A <b>TreeConnectorsRouting</b> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutConnectorsRoutingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDepthAlignment">
            <summary>
                <para>Gets or sets the tree diagram vertical alignment relative to the layout direction axis. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Alignment"/> enumeration value that specifies the vertical alignment of the tree diagram.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDepthAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDirection">
            <summary>
                <para>Gets or sets the layout direction. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Layout.LayoutDirection"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutDirectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutHorizontalSpacing">
            <summary>
                <para>Specifies the distance between shapes on the same level of hierarchy. This is a dependency property. 
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between shapes on the same level of hierarchy.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutHorizontalSpacingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutIsCompact">
            <summary>
                <para>Specifies whether the automatic tree layout arranges shapes minimizing the space between them.
This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to enable the compact tree layout; otherwise, <b>false</b>. By default, <b>true</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutIsCompactProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutSplitMode">
            <summary>
                <para>Specifies which diagram items are realigned when performing automatic relayout. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutSplitModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutVerticalSpacing">
            <summary>
                <para>Specifies the distance between layers of hierarchy. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between layers of hierarchy.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TreeLayoutVerticalSpacingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.UndoManager">
            <summary>
                <para>Provides access to an object that manages the undo and redo operations in the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>.
</para>
            </summary>
            <value>A DevExpress.Utils.UndoManager object.
</value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.UnselectItem(DevExpress.Xpf.Diagram.DiagramItem)">
            <summary>
                <para>Unselects the specified diagram item.
</para>
            </summary>
            <param name="item">
		A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> to unselect.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.UpdateConnectorsRoute(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Recalculates the route for the specified diagram connectors.
</para>
            </summary>
            <param name="connectors">
		A list of connectors whose routes should be recalculated.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactor">
            <summary>
                <para>Specifies the diagram zoom factor. This is a dependency property. 
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying the document zoom factor.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ZoomIn">
            <summary>
                <para>Increases the document zoom factor.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ZoomOut">
            <summary>
                <para>Decreases the document zoom factor.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase">

            <summary>
                <para>Serves as a base for behaviors that are used to bind the Diagram Control to data.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramDataBindingBehaviorBase class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.BeginInit">
            <summary>
                <para>Starts the DiagramDataBindingBehaviorBase's initialization. Initialization occurs at runtime.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.CanRefresh">
            <summary>
                <para>Gets whether the diagram can be refreshed. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if the diagram can be refreshed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.CanRefreshProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ClearExistingItems">
            <summary>
                <para>Specifies whether to remove existing items before generating a diagram from the data source. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to remove existing items before generating a diagram from the data source; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ClearExistingItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorsZOrder">
            <summary>
                <para>Specifies whether the connectors overlap diagram items. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ConnectorsZOrder"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorsZOrderProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplate">
            <summary>
                <para>Gets or sets a template that defines the presentation of connectors. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that represents the template which defines the presentation of connectors.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplateSelector">
            <summary>
                <para>Gets or sets an object that chooses a connector template based on custom logic. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ConnectorTemplateSelectorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.CustomLayoutItems">
            <summary>
                <para>Occurs before the generated items are added to the diagram.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.EndInit">
            <summary>
                <para>Ends the DiagramDataBindingBehaviorBase's initialization. 
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.GenerateConnector">
            <summary>
                <para>Fires before generating a connector from the data source and allows you to customize it.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.GenerateItem">
            <summary>
                <para>Fires before generating a diagram item representing a data object and allows you to customize it.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemContainerStyle">
            <summary>
                <para>Specifies the style that is applied to the container element generated for each item. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.Style object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemContainerStyleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsGenerated">
            <summary>
                <para>Occurs when diagram items are generated from the data source.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsSource">
            <summary>
                <para>Gets or sets the data source for items. This is a dependency property.
</para>
            </summary>
            <value>An IEnumerable object that provides data to the DiagramDataBindingBehaviorBase.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemsSourceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplate">
            <summary>
                <para>Gets or sets a template that defines the presentation of diagram items representing data objects. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that is the template which defines the presentation of diagram items representing data objects.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplateSelector">
            <summary>
                <para>Gets or sets an object that chooses a diagram item template based on custom logic. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> descendant that applies a template based on custom logic.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.ItemTemplateSelectorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.KeyMember">
            <summary>
                <para>Specifies the name of the data field that identifies the data item. This is a dependency property.
</para>
            </summary>
            <value>A System.String value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.KeyMemberProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.Refresh">
            <summary>
                <para>Fetches data from the source collections.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.RefreshCommand">
            <summary>
                <para>Gets the command that fetches data from the data source.
</para>
            </summary>
            <value>An object implementing the System.Windows.Input.ICommand interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.TemplateDiagram">
            <summary>
                <para>Gets or sets the diagram whose settings are used to generate the diagram from the data source. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.TemplateDiagramProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.UpdateConnector">
            <summary>
                <para>Occurs when a property of the data object represented by a diagram connector has changed its value.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramDataBindingBehaviorBase.UpdateItem">
            <summary>
                <para>Occurs when a property of the data object represented by a diagram item has changed its value.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramDesignerControl">

            <summary>
                <para>The Diagram Designer control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramDesignerControl class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.Actions">
            <summary>
                <para>Provides access to the collection of actions provided by the diagram designer ribbon.
</para>
            </summary>
            <value>The collection of actions.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName(System.Windows.DependencyObject)">
            <summary>
                <para>Specifies the name of the bar item associated with an object. This is an attached property.
</para>
            </summary>
            <value>A string value that specifies the name of the bar item associated with an object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemNameProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.GetBarItemName(System.Windows.DependencyObject)">
            <summary>
                <para>Gets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> attached property from a given object.
</para>
            </summary>
            <param name="d">
		An object whose <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> property's value is to be returned.

            </param>
            <returns>A string value that specifies the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> attached property for the specified object.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.PageOrientation">
            <summary>
                <para> 
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.SetBarItemName(System.Windows.DependencyObject,System.String)">
            <summary>
                <para>Sets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> attached property for a given object. 
</para>
            </summary>
            <param name="obj">
		An object for which the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> attached property is set.

            </param>
            <param name="value">
		A string value that specifies the value to be assigned to the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.TextHorizontalAlignment">
            <summary>
                <para> 
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.TextVerticalAlignment">
            <summary>
                <para> 
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior">

            <summary>
                <para>Allows you to generate diagrams from a data source. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramDataBindingBehavior class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorFromMember">
            <summary>
                <para>Specifies the name of the data field that identifies the item to use as the connector's begin item. This is a dependency property.
</para>
            </summary>
            <value>A string value that is the name of the data field that identifies the item to use as the connector's begin item.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorFromMemberProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorsSource">
            <summary>
                <para>Gets or sets the data source for connectors. This is a dependency property.
</para>
            </summary>
            <value>An IEnumerable object that provides data to the DiagramDataBindingBehavior.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorsSourceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorToMember">
            <summary>
                <para>Specifies the name of the data field that identifies the item to use as the connector's end item. This is a dependency property.
</para>
            </summary>
            <value>A string value that is the name of the data field that identifies the item to use as the connector's end item.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.ConnectorToMemberProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.LayoutKind">
            <summary>
                <para>Specifies the automatic layout to be applied to the generated diagram. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramLayoutKind"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDataBindingBehavior.LayoutKindProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramImage">

            <summary>
                <para>Represents a diagram image item.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramImage.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramImage class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramImage.AllowPlaceholder">
            <summary>
                <para>Gets or sets whether the current <see cref="T:DevExpress.Xpf.Diagram.DiagramImage"/> displays a placeholder when its <see cref="P:DevExpress.Xpf.Diagram.DiagramImage.Image"/> property is <b>null</b>. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to display a placeholder; otherwise, <b>false</b>. The default is <b>true</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramImage.AllowPlaceholderProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramImage.CanEdit">
            <summary>
                <para>This member is not supported by the DiagramImage class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramImage.FitToImage">
            <summary>
                <para>Changes the size of the diagram image item so that it matches the size of the source image.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramImage.FlipMode">
            <summary>
                <para>Gets or sets the flip effect that is currently applied to the image. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ImageFlipMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramImage.FlipModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramImage.Image">
            <summary>
                <para>Gets or sets the source of the image displayed by the image item. This is a dependency property.
</para>
            </summary>
            <value>An image source.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramImage.ImageProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramImage.ImageTransform">
            <summary>
                <para>Gets or sets a graphics transformation that should apply to the diagram image item. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.Media.Transform object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramImage.ImageTransformProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramImage.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramImage.PlaceholderGeometry">
            <summary>
                <para>Gets the object that identifies the geometry of the image placeholder. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ShapeGeometry"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramImage.PlaceholderGeometryProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramImage.SourceImageSize">
            <summary>
                <para>Gets the size of the source image. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Size"/> instance that is the size of the source image.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramImage.SourceImageSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramImage.StretchMode">
            <summary>
                <para>Specifies whether to preserve the aspect ratio of the source image when resizing the diagram image item. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.StretchMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramImage.StretchModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramContainerBase">

            <summary>
                <para>The base class for containers.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.AdjustBoundsBehavior">
            <summary>
                <para>Specifies the behavior when the end-user moves items close to the container boundaries. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.AdjustBoundaryBehavior"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainerBase.AdjustBoundsBehaviorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.Angle">
            <summary>
                <para>This member is not supported by the DiagramContainerBase class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.CanRotate">
            <summary>
                <para>This member is not supported by the DiagramContainerBase class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.IsSnapScope">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainerBase.IsSnapScopeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainerBase.Items">
            <summary>
                <para>Provides access to the collection of diagram items placed within the container.
</para>
            </summary>
            <value>The collection of diagram items.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramContainer">

            <summary>
                <para>Represents a diagram container item.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramContainer.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramContainer class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.CanAddItems">
            <summary>
                <para>Specifies whether end-users can add items to the container. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow adding items to the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.CanAddItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ContentBackground">
            <summary>
                <para>Gets or sets the brush used to paint the background of the DiagramContainer. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object used to paint the background of the text within the DiagramContainer.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ContentBackgroundProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.DragMode">
            <summary>
                <para>Specifies whether the container can be dragged by any point or only by header and bounds. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ContainerDragMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.DragModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.EditorBounds">
            <summary>
                <para>For internal use. Gets the editor's bounds.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Rect"/> structure.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.EditorBoundsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.Header">
            <summary>
                <para>Gets or sets the container header. This is a dependency property.
</para>
            </summary>
            <value>A string value that is the container header.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.HeaderPadding">
            <summary>
                <para>Specifies the header's padding within the container's boundaries. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.Thickness object specifying padding distances.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.HeaderPaddingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.HeaderProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorBeginPoint">
            <summary>
                <para>Specifies whether end-users can attach a connector's beginning point to the diagram items within the container.
</para>
            </summary>
            <value><b>true</b> to allow end-users to attach a connector's beginning point to the diagram items within the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorBeginPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorEndPoint">
            <summary>
                <para>Specifies whether end-users can attach a connector's end point to the diagram items within the container. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to attach a connector's end point to the diagram items within the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanAttachConnectorEndPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanChangeParent">
            <summary>
                <para>Specifies whether end-users can move the diagram items from this container to another.
This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to move the diagram items from this container to another; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanChangeParentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanCopyWithoutParent">
            <summary>
                <para>Specifies whether to allow end-users to copy items from the container. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to copy items from the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanCopyWithoutParentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanDeleteWithoutParent">
            <summary>
                <para>Specifies whether to allow end-users to remove items from the container.
This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to remove items from the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanDeleteWithoutParentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanEdit">
            <summary>
                <para>Specifies whether to allow end-users to edit the text displayed by the items within the container. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to edit the text displayed by the items within the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanEditProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanMove">
            <summary>
                <para>Specifies whether the diagram items within the container can be moved by end-users. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to allow end-users to move the diagram items within the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanMoveProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanResize">
            <summary>
                <para>Specifies whether to allow end-users to resize items within the container.
This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to resize items within the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanResizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanRotate">
            <summary>
                <para>Specifies whether to allow end-users to rotate items within the container.
This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to rotate items within the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanRotateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSelect">
            <summary>
                <para>Specifies whether to allow end-users to select items within the container. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to select items within the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSelectProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToOtherItems">
            <summary>
                <para>Specifies whether the item within the container can snap to other items. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if the item within the container can snap to other items; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToOtherItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToThisItem">
            <summary>
                <para>Specifies whether items can snap to an item within the container . This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, items can snap to an item within the container; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ItemsCanSnapToThisItemProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.Shape">
            <summary>
                <para>Gets or sets the container shape kind. This is a dependency property.
</para>
            </summary>
            <value>An object that specifies the container shape kind.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ShapeGeometry">
            <summary>
                <para>Gets the object that identifies the geometry of the container. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ShapeGeometry"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ShapeGeometryProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ShapeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramContainer.ShowHeader">
            <summary>
                <para>Gets or sets whether to show the header. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to show the header; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramContainer.ShowHeaderProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramConnector">

            <summary>
                <para>Connects two diagram items or two points.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramConnector class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Anchors">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Angle">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.AreSubordinatesVisible">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrow">
            <summary>
                <para>Gets or sets the connector's start arrow style. This is a dependency property.
</para>
            </summary>
            <value>An object that specifies the start arrow style.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowSize">
            <summary>
                <para>Gets or sets the connector's starting arrow size. This is a dependency property.
</para>
            </summary>
            <value>The starting arrow size.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginItem">
            <summary>
                <para>Gets or sets the start item for the connector. This is a dependency property.
</para>
            </summary>
            <value>The connector's start item.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemPointIndex">
            <summary>
                <para>Gets or sets the connection point on the start diagram item to which the connector is glued. This is a dependency property.
</para>
            </summary>
            <value>A zero-based index of the connection point on the start diagram item.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemPointIndexProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginPoint">
            <summary>
                <para>Gets or sets the connector's starting point within the diagram canvas. This is a dependency property.
</para>
            </summary>
            <value>The starting point of the connector.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginPointRestrictions">
            <summary>
                <para>Specifies the restrictions applied to the end-user actions with the connector's begin point.
This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ConnectorPointRestrictions"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginPointRestrictionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanAttachConnectorBeginPoint">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanAttachConnectorEndPoint">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanChangeParent">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanChangeRoute">
            <summary>
                <para>Specifies whether to allow end-users to modify the connector's route. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to modify the connector's route; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.CanChangeRouteProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanDragBeginPoint">
            <summary>
                <para>Specifies whether to allow end-users to drag the connector's begin point. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to drag the connector's begin point; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.CanDragBeginPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanDragEndPoint">
            <summary>
                <para>Specifies whether to allow end-users to drag the connector's end point. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to drag the connector's end point; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.CanDragEndPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanHideSubordinates">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanResize">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanRotate">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanSnapToOtherItems">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanSnapToThisItem">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonHorizontalAlignment">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonOffset">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonPosition">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonVerticalAlignment">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CollapseButtonVisibilityMode">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.ConnectionPoints">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Content">
            <summary>
                <para>Gets or sets the text displayed by the connector. This is a dependency property.
</para>
            </summary>
            <value>The text displayed by the connector.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.ContentBackground">
            <summary>
                <para>Gets or sets the brush used to paint the background of the text within the DiagramConnector. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object used to paint the background of the text within the DiagramConnector.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.ContentBackgroundProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.ContentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndArrow">
            <summary>
                <para>Gets or sets the connector's end arrow style. This is a dependency property.
</para>
            </summary>
            <value>An object that specifies the end arrow style.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowSize">
            <summary>
                <para>Gets or sets the connector's ending arrow size. This is a dependency property.
</para>
            </summary>
            <value>The ending arrow size.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndItem">
            <summary>
                <para>Gets or sets the end item for the connector. This is a dependency property.
</para>
            </summary>
            <value>The connector's end item.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndItemPointIndex">
            <summary>
                <para>Gets or sets the connection point on the end diagram item to which the connector is glued. This is a dependency property.
</para>
            </summary>
            <value>A zero-based index of the connection point on the end diagram item
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndItemPointIndexProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndItemProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndPoint">
            <summary>
                <para>Gets or sets the connector's end point on the diagram canvas. This is a dependency property.
</para>
            </summary>
            <value>The end point of the connector.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndPointRestrictions">
            <summary>
                <para>Specifies the restrictions applied to the end-user actions with the connector's end point.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ConnectorPointRestrictions"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndPointRestrictionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Height">
            <summary>
                <para>Gets or sets the height of the connector.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.IncomingConnectors">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.MinHeight">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.MinWidth">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.MoveWithSubordinates">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.OutgoingConnectors">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Padding">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Points">
            <summary>
                <para>Gets or sets a collection of turn points for the connector. This is a dependency property.
</para>
            </summary>
            <value>A collection of turn points. 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.PointsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Position">
            <summary>
                <para>Gets or sets the coordinates of the connector's upper left corner.
</para>
            </summary>
            <value>The coordinates of the connector's upper left corner.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.TextPosition">
            <summary>
                <para>Gets the position of the text displayed by the DiagramConnector. This is a dependency property.
</para>
            </summary>
            <value>The coordinates of the text block.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.TextPositionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Type">
            <summary>
                <para>Gets or sets the connector's type. This is a dependency property.
</para>
            </summary>
            <value>The connector's type.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.TypeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.UpdateRoute">
            <summary>
                <para>Recalculates the diagram connector's route.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Width">
            <summary>
                <para>Gets or sets the width of the connector.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value that is the width of the connector in pixels.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramDrawingContext">

            <summary>
                <para>Lists values that specify the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>'s drawing context.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDrawingContext.Canvas">
            <summary>
                <para>The diagram is rendered on the canvas.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDrawingContext.ExportToImage">
            <summary>
                <para>The diagram is exported.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDrawingContext.Print">
            <summary>
                <para>The diagram is printed.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior">

            <summary>
                <para>Allows you to generate relationship diagrams from a hierarchical data source.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramOrgChartBehavior class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenPath">
            <summary>
                <para>Gets or sets the path to the property that stores a collection of the diagram item's subordinates. This is a dependnecy property.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that is the path to a property.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenPathProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenSelector">
            <summary>
                <para>Gets or sets an object that chooses an item's subordinates based on custom logic. This is a dependency property.
</para>
            </summary>
            <value>An <b>IChildrenSelector</b> implementation that chooses an item's subordinates based on custom logic.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ChildrenSelectorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpandSubordinatesButtonMode">
            <summary>
                <para>Gets or sets the display mode of the expand/collapse button. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ExpandSubordinatesButtonMode"/> enumeration value that is the display mode of the expand/collapse button.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpandSubordinatesButtonModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpansionDepth">
            <summary>
                <para>Gets or sets the number of hierarchy levels that expand when the diagram is generated. This is a dependency property.
</para>
            </summary>
            <value>An <b>integer</b> value that is the number of expanded hierarchy levels. The default is <b>-1</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ExpansionDepthProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.GenerationDepth">
            <summary>
                <para>Gets or sets the number of hierarchy levels that are retrieved from the data source when the diagram is generated. This is a dependency property.
</para>
            </summary>
            <value>An <b>integer</b> value that is the number of hierarchy levels retrieved from the data source. The default is <b>-1</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.GenerationDepthProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.HorizontalSpacing">
            <summary>
                <para>Specifies the distance between diagram items on the same level of hierarchy. This is a dependency property. 
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between diagram items on the same level of hierarchy.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.HorizontalSpacingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutDirection">
            <summary>
                <para>Gets or sets the layout direction. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.Direction"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutDirectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutKind">
            <summary>
                <para>Specifies the automatic layout to be applied to the generated diagram. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramLayoutKind"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.LayoutKindProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.PageMargin">
            <summary>
                <para>Gets or sets the amount of space between the page's borders and its contents. This is a dependency property.
</para>
            </summary>
            <value>The amount of space in pixels between the page's borders and its contents.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.PageMarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ParentMember">
            <summary>
                <para>Specifies the name of the data field that identifies the parent of a data item. This is a dependency property.
</para>
            </summary>
            <value>A System.String value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.ParentMemberProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.VerticalSpacing">
            <summary>
                <para>Specifies the distance between layers of hierarchy. This is a dependency property.
</para>
            </summary>
            <value>A System.Double value that is the distance in pixels between layers of hierarchy.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramOrgChartBehavior.VerticalSpacingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramShape">

            <summary>
                <para>Represents a diagram shape.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramShape.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramShape class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.CanChangeParameter">
            <summary>
                <para>Specifies whether end-users can edit the parameters of the shape using the Properties Panel. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to edit the parameters of the shape; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.CanChangeParameterProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Content">
            <summary>
                <para>Gets or sets the text displayed by the shape. This is a dependency property.
</para>
            </summary>
            <value>The text displayed by the shape.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.ContentBackground">
            <summary>
                <para>Gets or sets the brush used to paint the background of the text within the DiagramShape. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object used to paint the background of the text within the DiagramShape.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ContentBackgroundProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ContentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.EditorBounds">
            <summary>
                <para>For internal use. Gets the editor's bounds.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Rect"/> structure.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.EditorBoundsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Padding">
            <summary>
                <para>Gets or sets the amount of space between the item's borders and its contents.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Thickness"/> value that specifies the amount of space in pixels between the item's borders and its contents.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Parameters">
            <summary>
                <para>Specifies shape parameters. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.Media.DoubleCollection object that represents shape parameters.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ParametersProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Shape">
            <summary>
                <para>Gets or sets the shape kind. This is a dependency property.
</para>
            </summary>
            <value>An object that specifies the shape kind.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.ShapeGeometry">
            <summary>
                <para>Gets the object that identifies the geometry of the shape. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ShapeGeometry"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ShapeGeometryProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ShapeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
    </members>
</doc>
